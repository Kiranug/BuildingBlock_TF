name: Terraform Deployment

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'dev'
        type: choice
        options:
          - dev
          - prod

env:
  TF_VERSION: 1.5.0
  TF_IN_AUTOMATION: true

jobs:
  terraform:
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment }}
    permissions:
      id-token: write
      contents: read
    strategy:
      matrix:
        include:
          - env: dev
            tfvars: dev.tfvars
            storage_account: "tfstatedev"
            resource_group: "tfstate-rg-dev"
          - env: prod
            tfvars: prod.tfvars
            storage_account: "tfstateprod"
            resource_group: "tfstate-rg-prod"
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: ${{ env.TF_VERSION }}
          
      - name: Azure Login
        uses: azure/login@v1
        with:
          client-id: ${{ env.ARM_CLIENT_ID }}
          tenant-id: ${{ env.ARM_TENANT_ID }}
          subscription-id: ${{ env.ARM_SUBSCRIPTION_ID }}
          
      - name: Terraform Init
        run: |
          terraform init \
            -backend-config="resource_group_name=${{ matrix.resource_group }}" \
            -backend-config="storage_account_name=${{ matrix.storage_account }}" \
            -backend-config="container_name=tfstate" \
            -backend-config="key=terraform.tfstate"
        
      - name: Terraform Validate
        run: terraform validate
        
      - name: Terraform Plan
        run: terraform plan -var-file=${{ matrix.tfvars }}
        
      - name: Terraform Apply
        if: github.event.inputs.environment == matrix.env
        run: terraform apply -var-file=${{ matrix.tfvars }} -auto-approve
